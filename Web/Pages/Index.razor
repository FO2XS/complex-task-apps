@page "/"
@using Pages.MainPart
@using Pages.PopUpWindows

@inherits LayoutComponentBase
@inject IDialogService _dialogService
@inject SignInManager<User> _signInManager
@inject NavigationManager _manager
@inject UserManager<User> _userManager
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
@inject Blazored.SessionStorage.ISessionStorageService _sessionStorage

<div class="menu1">
    <div style="margin: 0 auto; max-width: 1240px; ">
        <div class="logo-and-type-game-and-technical-support">
            <div class="logo">
                Лого
            </div>
            <div class="">
                <select>
                    <option selected>
                        CS:GO
                    </option>
                    <option>
                        LoL
                    </option>
                </select>
            </div>
            <div class="technical-support">
                Тех. поддержка

            </div>
        </div>

        <div class="custom-features">
            <div>FAQ</div>
            <div>
                <MudButton @onclick="OpenLogin" Variant="Variant.Filled" Color="Color.Success">
                    Войти
                </MudButton>
                @if (_loginUser is not null)
                {
                    <div>
                        @_loginUser.Id
                        <br />
                        @_loginUser.Email
                    </div>
                }


                <br />
                <MudButton Variant="Variant.Filled" Color="Color.Success">
                    <NavLink style="text-decoration:none; color: white;" href="bla">
                        Регистрация
                    </NavLink>
                </MudButton>


            </div>
        </div>
    </div>
</div>
<div class="main-main">
    <div class="main">
        <div class="hot-matches">
            <HotMath></HotMath>
        </div>
        <div class="main-part">
            <Test.Pages.MainPart.MainPart></Test.Pages.MainPart.MainPart>
        </div>
    </div>
</div>



@code{
    User _loginUser;
    private async void OpenLogin()
    {
        _dialogService.Show<LoginUser>("Вход");
        GetSession();
    }

    private async void OpenLogout()
    {
        _dialogService.Show<LogOut>("Подтверждение");
    }

    protected async override void OnInitialized()
    {
        var temp = await _localStorage.ContainKeyAsync(StorageKeys.LocalKey);
        if (temp)
        {
            GetSession();
            StateHasChanged();
        }
    }

    private async void GetSession()
    {
        _loginUser = await _localStorage.GetItemAsync<User>(StorageKeys.LocalKey);
        await _sessionStorage.SetItemAsync(StorageKeys.SessionKey, _loginUser);
        _loginUser = await _sessionStorage.GetItemAsync<User>(StorageKeys.SessionKey);
    }
}