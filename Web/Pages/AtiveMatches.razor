@inherits ComponentBase
@using Data.Modal
@using Data
@using Microsoft.EntityFrameworkCore;

<div class="active-matches">
	<div class="active-matches-title">
		<p>Эти матчи уже начались! Смотри матчи и ставь ставки!</p>
	</div>

	<div class="list-of-active-matches">
		<ul>
			@foreach (var bet in Events)
			{
				<li>
					<div class="active-matches-bet">
						<div class="team-left">
							<div class="team">
								<img src="@bet.IdTeam1Navigation.Logo">
								<p class="title">@bet.IdTeam1Navigation.Title</p>
								<div class="koef">
									<p>@(GetCoef1(bet.PossibleBets))</p>
									<hr />
								</div>
							</div>
						</div>
						<div class="main-info">
							<div class="matches-bet-info">
								<p class="tournament-title">ESEA Advanced NA</p>
								<p class="type-bo">BO3</p>
								<p class="time">@((@DateTime.Now - @bet.StartDate).Value.ToString(@"hh\:mm\:ss"))</p>
							</div>
							<div class="vs">
								<p>VS</p>
							</div>
						</div>
						<div class="team-right">
							<div class="team">
								<img src="@bet.IdTeam2Navigation.Logo">
								<p class="title">@bet.IdTeam2Navigation.Title</p>
								<div class="koef">
									<p>@(GetCoef2(bet.PossibleBets))</p>
									<hr />
								</div>
							</div>
						</div>
					</div>
				</li>
			}
		</ul>
	</div>
</div>
@code {
    public List<Event> Events = null;

    protected override void OnInitialized()
    {
        Events = new bookmaker_officeContext().Events
            .Where(a => a.IdSport == 1)
            .Where(a => a.StartDate <= DateTime.Now)
            .Where(a => a.IsPast != true)
            .Include(team1 => team1.IdTeam1Navigation)
            .Include(team2 => team2.IdTeam2Navigation)
            .Include(x => x.PossibleBets)
            .ToList();
    }

    public String GetCoef1(ICollection<PossibleBet> ts)
    {
        var tob = ts.FirstOrDefault(x => x.IdTob == 1);
        return tob is null ? "null" : tob.Coef1.ToString();
    }
    public String GetCoef2(ICollection<PossibleBet> ts)
    {
        var tob = ts.FirstOrDefault(x => x.IdTob == 1);
        return tob is null ? "null" : tob.Coef2.ToString();
    }
}
